{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "nodejs-postgres-persistent",
        "annotations": {
            "openshift.io/display-name": "Node.js + PostgreSQL (Persistent)",
            "description": "An example Node.js application with a PostgreSQL database.",
            "tags": "quickstart,nodejs",
            "iconClass": "icon-nodejs",
            "openshift.io/long-description": "This template defines resources needed to develop a NodeJS application, including a build configuration and application deployment configuration.  The database is stored in persistent storage.",
            "openshift.io/provider-display-name": "Red Hat, Inc.",
            "openshift.io/documentation-url": "https://github.com/WhyKickAmooCow/openshift-shipping-tracker-ex",
            "openshift.io/support-url": "https://access.redhat.com",
            "template.openshift.io/bindable": "false"
        }
    },
    "message": "The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.",
    "labels": {
        "template": "nodejs-postgres-example",
        "app": "nodejs-postgres-example"
    },
    "objects": [{
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}",
                "annotations": {
                    "description": "Exposes and load balances the application pods"
                }
            },
            "spec": {
                "ports": [{
                    "name": "web",
                    "port": 8080,
                    "targetPort": 8080
                }],
                "selector": {
                    "name": "${NAME}"
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}"
            },
            "spec": {
                "host": "${APPLICATION_DOMAIN}",
                "to": {
                    "kind": "Service",
                    "name": "${NAME}"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}",
                "annotations": {
                    "description": "Keeps track of changes in the application image"
                }
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}",
                "annotations": {
                    "description": "Defines how to build the application",
                    "template.alpha.openshift.io/wait-for-ready": "true"
                }
            },
            "spec": {
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                    },
                    "contextDir": "${CONTEXT_DIR}"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${NAMESPACE}",
                            "name": "centos7-s2i-nodejs:8.x"
                        },
                        "env": [{
                            "name": "NPM_MIRROR",
                            "value": "${NPM_MIRROR}"
                        }]
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${NAME}:latest"
                    }
                },
                "triggers": [{
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    },
                    {
                        "type": "GitHub",
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "Generic",
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        }
                    }
                ],
                "postCommit": {
                    "script": "npm test"
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}",
                "annotations": {
                    "description": "Defines how to deploy the application server",
                    "template.alpha.openshift.io/wait-for-ready": "true"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling"
                },
                "triggers": [{
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "nodejs-example"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${NAME}:latest"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "name": "${NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${NAME}",
                        "labels": {
                            "name": "${NAME}"
                        }
                    },
                    "spec": {
                        "containers": [{
                            "name": "nodejs-example",
                            "image": " ",
                            "ports": [{
                                "containerPort": 8080
                            }],
                            "readinessProbe": {
                                "timeoutSeconds": 3,
                                "initialDelaySeconds": 3,
                                "httpGet": {
                                    "path": "/",
                                    "port": 8080
                                }
                            },
                            "livenessProbe": {
                                "timeoutSeconds": 3,
                                "initialDelaySeconds": 30,
                                "httpGet": {
                                    "path": "/",
                                    "port": 8080
                                }
                            },
                            "resources": {
                                "limits": {
                                    "memory": "${APP_MEMORY_LIMIT}"
                                }
                            },
                            "env": [{
                                    "name": "NODE_ENV",
                                    "value": "production"
                                },
                                {
                                    "name": "PGUSER",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${DATABASE_SERVICE_NAME}",
                                            "key": "database-user"
                                        }
                                    }
                                }, {
                                    "name": "PGPASSWORD",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${DATABASE_SERVICE_NAME}",
                                            "key": "database-password"
                                        }
                                    }
                                }, {
                                    "name": "PGDATABASE",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${DATABASE_SERVICE_NAME}",
                                            "key": "database-name"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "${APP_MEMORY_LIMIT}"
                                }
                            }
                        }]
                    }
                }
            }
        },
        {
            "kind": "Secret",
            "apiVersion": "v1",
            "metadata": {
                "name": "${DATABASE_SERVICE_NAME}",
                "annotations": {
                    "template.openshift.io/expose-username": "{.data['database-user']}",
                    "template.openshift.io/expose-password": "{.data['database-password']}",
                    "template.openshift.io/expose-database_name": "{.data['database-name']}"
                }
            },
            "stringData": {
                "database-user": "${POSTGRESQL_USER}",
                "database-password": "${POSTGRESQL_PASSWORD}",
                "database-name": "${POSTGRESQL_DATABASE}"
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "${DATABASE_SERVICE_NAME}",
                "annotations": {
                    "template.openshift.io/expose-uri": "postgres://{.spec.clusterIP}:{.spec.ports[?(.name==\"postgresql\")].port}"
                }
            },
            "spec": {
                "ports": [{
                    "name": "postgresql",
                    "protocol": "TCP",
                    "port": 5432,
                    "targetPort": 5432,
                    "nodePort": 0
                }],
                "selector": {
                    "name": "${DATABASE_SERVICE_NAME}"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "PersistentVolumeClaim",
            "apiVersion": "v1",
            "metadata": {
                "name": "${DATABASE_SERVICE_NAME}"
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                    }
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${DATABASE_SERVICE_NAME}",
                "annotations": {
                    "template.alpha.openshift.io/wait-for-ready": "true"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [{
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "postgresql"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "postgresql:${POSTGRESQL_VERSION}",
                                "namespace": "${NAMESPACE}"
                            },
                            "lastTriggeredImage": ""
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "name": "${DATABASE_SERVICE_NAME}"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "name": "${DATABASE_SERVICE_NAME}"
                        }
                    },
                    "spec": {
                        "containers": [{
                            "name": "postgresql",
                            "image": " ",
                            "ports": [{
                                "containerPort": 5432,
                                "protocol": "TCP"
                            }],
                            "readinessProbe": {
                                "timeoutSeconds": 1,
                                "initialDelaySeconds": 5,
                                "exec": {
                                    "command": ["/bin/sh", "-i", "-c", "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]
                                }
                            },
                            "livenessProbe": {
                                "timeoutSeconds": 1,
                                "initialDelaySeconds": 30,
                                "tcpSocket": {
                                    "port": 5432
                                }
                            },
                            "env": [{
                                    "name": "POSTGRESQL_USER",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${DATABASE_SERVICE_NAME}",
                                            "key": "database-user"
                                        }
                                    }
                                },
                                {
                                    "name": "POSTGRESQL_PASSWORD",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${DATABASE_SERVICE_NAME}",
                                            "key": "database-password"
                                        }
                                    }
                                },
                                {
                                    "name": "POSTGRESQL_DATABASE",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "${DATABASE_SERVICE_NAME}",
                                            "key": "database-name"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "memory": "${DATABASE_MEMORY_LIMIT}"
                                }
                            },
                            "volumeMounts": [{
                                "name": "${DATABASE_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/pgsql/data"
                            }],
                            "terminationMessagePath": "/dev/termination-log",
                            "imagePullPolicy": "IfNotPresent",
                            "capabilities": {},
                            "securityContext": {
                                "capabilities": {},
                                "privileged": false
                            }
                        }],
                        "volumes": [{
                            "name": "${DATABASE_SERVICE_NAME}-data",
                            "persistentVolumeClaim": {
                                "claimName": "${DATABASE_SERVICE_NAME}"
                            }
                        }],
                        "restartPolicy": "Always",
                        "dnsPolicy": "ClusterFirst"
                    }
                }
            },
            "status": {}
        }
    ],
    "parameters": [{
            "name": "NAME",
            "displayName": "Name",
            "description": "The name assigned to all of the frontend objects defined in this template.",
            "required": true,
            "value": "nodejs-example"
        },
        {
            "name": "NAMESPACE",
            "displayName": "Namespace",
            "description": "The OpenShift Namespace where the ImageStream resides.",
            "required": true,
            "value": "openshift"
        },
        {
            "name": "APP_MEMORY_LIMIT",
            "displayName": "Memory Limit",
            "description": "Maximum amount of memory the container can use.",
            "required": true,
            "value": "512Mi"
        },
        {
            "name": "SOURCE_REPOSITORY_URL",
            "displayName": "Git Repository URL",
            "description": "The URL of the repository with your application source code.",
            "required": true,
            "value": "https://github.com/WhyKickAmooCow/openshift-shipping-tracker-ex.git"
        },
        {
            "name": "SOURCE_REPOSITORY_REF",
            "displayName": "Git Reference",
            "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
        },
        {
            "name": "CONTEXT_DIR",
            "displayName": "Context Directory",
            "description": "Set this to the relative path to your project if it is not in the root of your repository."
        },
        {
            "name": "APPLICATION_DOMAIN",
            "displayName": "Application Hostname",
            "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.",
            "value": ""
        },
        {
            "name": "GITHUB_WEBHOOK_SECRET",
            "displayName": "GitHub Webhook Secret",
            "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{40}"
        },
        {
            "name": "GENERIC_WEBHOOK_SECRET",
            "displayName": "Generic Webhook Secret",
            "description": "A secret string used to configure the Generic webhook.",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{40}"
        },
        {
            "name": "NPM_MIRROR",
            "displayName": "Custom NPM Mirror URL",
            "description": "The custom NPM mirror URL",
            "value": ""
        }, {
            "name": "DATABASE_MEMORY_LIMIT",
            "displayName": "Memory Limit (Postgres)",
            "description": "Maximum amount of memory the container can use.",
            "value": "512Mi",
            "required": true
        },
        {
            "name": "DATABASE_SERVICE_NAME",
            "displayName": "Database Service Name",
            "description": "The name of the OpenShift Service exposed for the database.",
            "value": "postgresql",
            "required": true
        },
        {
            "name": "POSTGRESQL_USER",
            "displayName": "PostgreSQL Connection Username",
            "description": "Username for PostgreSQL user that will be used for accessing the database.",
            "generate": "expression",
            "from": "user[A-Z0-9]{3}",
            "required": true
        },
        {
            "name": "POSTGRESQL_PASSWORD",
            "displayName": "PostgreSQL Connection Password",
            "description": "Password for the PostgreSQL connection user.",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{16}",
            "required": true
        },
        {
            "name": "POSTGRESQL_DATABASE",
            "displayName": "PostgreSQL Database Name",
            "description": "Name of the PostgreSQL database accessed.",
            "value": "sampledb",
            "required": true
        },
        {
            "name": "VOLUME_CAPACITY",
            "displayName": "Volume Capacity",
            "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
            "value": "1Gi",
            "required": true
        },
        {
            "name": "POSTGRESQL_VERSION",
            "displayName": "Version of PostgreSQL Image",
            "description": "Version of PostgreSQL image to be used (9.2, 9.4, 9.5 or latest).",
            "value": "9.5",
            "required": true
        }
    ]
}